// This file is auto-generated by CMake at configuration time from ./config.hpp.in
#pragma once

// notf version ===================================================================================================== //

/// Version of the notf source code.
#define NOTF_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define NOTF_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define NOTF_VERSION_PATCH @PROJECT_VERSION_PATCH@

/// Human readable notf version string.
#cmakedefine NOTF_VERSION_STRING "@NOTF_VERSION_STRING@"

/// The git commit from which the binary was compiled.
#cmakedefine NOTF_BUILT_COMMIT "@NOTF_BUILT_COMMIT@"

/// Whether or not the code was modified before compilation.
#cmakedefine01 NOTF_BUILT_COMMIT_WAS_MODIFIED

// compiler related ================================================================================================= //

/// Compiler used (as determined by CMake).
#cmakedefine NOTF_CLANG
#cmakedefine NOTF_GCC
#cmakedefine NOTF_MSVC

// notf namespace =================================================================================================== //

/// Name of the notf namespace.
/// This macro can be used to implement namespace versioning.
#define NOTF_NAMESPACE_NAME @PROJECT_NAME@

/// Opens the notf namespace.
#define NOTF_OPEN_NAMESPACE namespace NOTF_NAMESPACE_NAME {

/// For visual balance with NOTF_OPEN_NAMESPACE.
#define NOTF_CLOSE_NAMESPACE }

/// Use the notf namespace.
#define NOTF_USING_NAMESPACE using namespace NOTF_NAMESPACE_NAME

// notf::literals namespace ========================================================================================= //

/// Name of the notf::literals namespace.
#define NOTF_LITERALS_NAMESPACE_NAME literals

/// Opens the notf::literals namespace.
#define NOTF_OPEN_LITERALS_NAMESPACE NOTF_OPEN_NAMESPACE namespace NOTF_LITERALS_NAMESPACE_NAME {

/// For visual balance with NOTF_OPEN_LITERALS_NAMESPACE.
#define NOTF_CLOSE_LITERALS_NAMESPACE NOTF_CLOSE_NAMESPACE }

/// Use the notf::literals namespace.
#define NOTF_USING_LITERALS_NAMESPACE using namespace ::NOTF_NAMESPACE_NAME::NOTF_LITERALS_NAMESPACE_NAME

// notf constants =================================================================================================== //

/// Seed value used for all hashing at compile time.
/// Although it is highly unlikely to have a hash collision, it is still possible that (for example) two property names
/// produce the same hash value. Since this would cause the built to fail, you can manually set this seed value to
/// anything != 0 (the default) and try again. Chances are, you'll get lucky on your second try.
#define NOTF_CONSTEXPR_SEED 0

/// Minimum log level for log messages to be compiled.
/// Log messages that are logged with NOTF_LOG_x() where "x" has  a level less than NOTF_LOG_LEVEL are removed before
/// compilation.
///     TRACE = 0
///     DEBUG = 1
///     INFO  = 2
///     WARN  = 3
///     ERROR = 4
///     CRIT  = 5
#define NOTF_LOG_LEVEL @NOTF_LOG_LEVEL@
