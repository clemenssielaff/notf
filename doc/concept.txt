Main Loop
- Actions can be performed and raise exceptions. If an exception is raised, the action is interrupted and does not change the change

- Properties
  - Stored in db.

- Widgets
  - Are component based as in component based as in http://gameprogrammingpatterns.com/component.html
  - Can be inside / outside or parent and in front-of or behind when outside
  - Widgets have a state machine, each state has its own components
  - There are transitions between states, that might take longer than 1 frame (animation)
  - Widget states are hierarchical
  - Have a single parent only and share components or even the state machine
  - Have a bounding rect and shape (components)
  - Have a position relative to another widget (their parent by default) (another component)
  - Widgets can have focus
  - Components shouldn't store any of their data themselves but refer to the central model (database) instead (?)

- Actions
  - Are different from events because they are user-issued. They do trigger events however
  - Actions are always application-global. It is the widget-trees responsibility to find out what to do with them
  - Can be delivered to 0-n widgets via events

-Events
  - Widgets form the event hierarchy
  - They can subscribe to any event from any widget, unlike in Qt where you'd have to forward and massage the event propagation
  - When subscribing to an event, is there a way to pass a condition function as well, so a widget can say that function A receives a mouse click event only when CTRL is clicked and the mouse click position is within the parent shape? (and another function only when it is a right click and the mouse is outside the widget's bounding rect) and even stuff like "Application: give me all events where a button was pressed while any widgets of type "text entry" had the focus"


- Resource / Pixmap manager



At the core of the application is the event loop.
Within the event loop there are several stages, which make sure that all data access and object removals happen in a way that makes them save for concurrency.

Database: SQLite
Manages Properties
Properties are persistent values.
They can be read at any time during the loop but written only after all other operations have finished.
Properties can be defined using stylesheets

Widgets
