#include "app/key.hpp"

#include "app/glfw_wrapper.hpp"

namespace signal {

KEY from_glfw_key(int key)
{
    switch (key) {
    case GLFW_KEY_SPACE:
        return KEY::SPACE;
    case GLFW_KEY_APOSTROPHE:
        return KEY::APOSTROPHE;
    case GLFW_KEY_COMMA:
        return KEY::COMMA;
    case GLFW_KEY_MINUS:
        return KEY::MINUS;
    case GLFW_KEY_PERIOD:
        return KEY::PERIOD;
    case GLFW_KEY_SLASH:
        return KEY::SLASH;
    case GLFW_KEY_0:
        return KEY::ZERO;
    case GLFW_KEY_1:
        return KEY::ONE;
    case GLFW_KEY_2:
        return KEY::TWO;
    case GLFW_KEY_3:
        return KEY::THREE;
    case GLFW_KEY_4:
        return KEY::FOUR;
    case GLFW_KEY_5:
        return KEY::FIVE;
    case GLFW_KEY_6:
        return KEY::SIX;
    case GLFW_KEY_7:
        return KEY::SEVEN;
    case GLFW_KEY_8:
        return KEY::EIGHT;
    case GLFW_KEY_9:
        return KEY::NINE;
    case GLFW_KEY_SEMICOLON:
        return KEY::SEMICOLON;
    case GLFW_KEY_EQUAL:
        return KEY::EQUAL;
    case GLFW_KEY_A:
        return KEY::A;
    case GLFW_KEY_B:
        return KEY::B;
    case GLFW_KEY_C:
        return KEY::C;
    case GLFW_KEY_D:
        return KEY::D;
    case GLFW_KEY_E:
        return KEY::E;
    case GLFW_KEY_F:
        return KEY::F;
    case GLFW_KEY_G:
        return KEY::G;
    case GLFW_KEY_H:
        return KEY::H;
    case GLFW_KEY_I:
        return KEY::I;
    case GLFW_KEY_J:
        return KEY::J;
    case GLFW_KEY_K:
        return KEY::K;
    case GLFW_KEY_L:
        return KEY::L;
    case GLFW_KEY_M:
        return KEY::M;
    case GLFW_KEY_N:
        return KEY::N;
    case GLFW_KEY_O:
        return KEY::O;
    case GLFW_KEY_P:
        return KEY::P;
    case GLFW_KEY_Q:
        return KEY::Q;
    case GLFW_KEY_R:
        return KEY::R;
    case GLFW_KEY_S:
        return KEY::S;
    case GLFW_KEY_T:
        return KEY::T;
    case GLFW_KEY_U:
        return KEY::U;
    case GLFW_KEY_V:
        return KEY::V;
    case GLFW_KEY_W:
        return KEY::W;
    case GLFW_KEY_X:
        return KEY::X;
    case GLFW_KEY_Y:
        return KEY::Y;
    case GLFW_KEY_Z:
        return KEY::Z;
    case GLFW_KEY_LEFT_BRACKET:
        return KEY::LEFT_BRACKET;
    case GLFW_KEY_BACKSLASH:
        return KEY::BACKSLASH;
    case GLFW_KEY_RIGHT_BRACKET:
        return KEY::RIGHT_BRACKET;
    case GLFW_KEY_GRAVE_ACCENT:
        return KEY::GRAVE_ACCENT;
    case GLFW_KEY_WORLD_1:
        return KEY::WORLD_1;
    case GLFW_KEY_WORLD_2:
        return KEY::WORLD_2;
    case GLFW_KEY_ESCAPE:
        return KEY::ESCAPE;
    case GLFW_KEY_ENTER:
        return KEY::ENTER;
    case GLFW_KEY_TAB:
        return KEY::TAB;
    case GLFW_KEY_BACKSPACE:
        return KEY::BACKSPACE;
    case GLFW_KEY_INSERT:
        return KEY::INSERT;
    case GLFW_KEY_DELETE:
        return KEY::DELETE;
    case GLFW_KEY_RIGHT:
        return KEY::RIGHT;
    case GLFW_KEY_LEFT:
        return KEY::LEFT;
    case GLFW_KEY_DOWN:
        return KEY::DOWN;
    case GLFW_KEY_UP:
        return KEY::UP;
    case GLFW_KEY_PAGE_UP:
        return KEY::PAGE_UP;
    case GLFW_KEY_PAGE_DOWN:
        return KEY::PAGE_DOWN;
    case GLFW_KEY_HOME:
        return KEY::HOME;
    case GLFW_KEY_END:
        return KEY::END;
    case GLFW_KEY_CAPS_LOCK:
        return KEY::CAPS_LOCK;
    case GLFW_KEY_SCROLL_LOCK:
        return KEY::SCROLL_LOCK;
    case GLFW_KEY_NUM_LOCK:
        return KEY::NUM_LOCK;
    case GLFW_KEY_PRINT_SCREEN:
        return KEY::PRINT_SCREEN;
    case GLFW_KEY_PAUSE:
        return KEY::PAUSE;
    case GLFW_KEY_F1:
        return KEY::F1;
    case GLFW_KEY_F2:
        return KEY::F2;
    case GLFW_KEY_F3:
        return KEY::F3;
    case GLFW_KEY_F4:
        return KEY::F4;
    case GLFW_KEY_F5:
        return KEY::F5;
    case GLFW_KEY_F6:
        return KEY::F6;
    case GLFW_KEY_F7:
        return KEY::F7;
    case GLFW_KEY_F8:
        return KEY::F8;
    case GLFW_KEY_F9:
        return KEY::F9;
    case GLFW_KEY_F10:
        return KEY::F10;
    case GLFW_KEY_F11:
        return KEY::F11;
    case GLFW_KEY_F12:
        return KEY::F12;
    case GLFW_KEY_F13:
        return KEY::F13;
    case GLFW_KEY_F14:
        return KEY::F14;
    case GLFW_KEY_F15:
        return KEY::F15;
    case GLFW_KEY_F16:
        return KEY::F16;
    case GLFW_KEY_F17:
        return KEY::F17;
    case GLFW_KEY_F18:
        return KEY::F18;
    case GLFW_KEY_F19:
        return KEY::F19;
    case GLFW_KEY_F20:
        return KEY::F20;
    case GLFW_KEY_F21:
        return KEY::F21;
    case GLFW_KEY_F22:
        return KEY::F22;
    case GLFW_KEY_F23:
        return KEY::F23;
    case GLFW_KEY_F24:
        return KEY::F24;
    case GLFW_KEY_F25:
        return KEY::F25;
    case GLFW_KEY_KP_0:
        return KEY::KP_0;
    case GLFW_KEY_KP_1:
        return KEY::KP_1;
    case GLFW_KEY_KP_2:
        return KEY::KP_2;
    case GLFW_KEY_KP_3:
        return KEY::KP_3;
    case GLFW_KEY_KP_4:
        return KEY::KP_4;
    case GLFW_KEY_KP_5:
        return KEY::KP_5;
    case GLFW_KEY_KP_6:
        return KEY::KP_6;
    case GLFW_KEY_KP_7:
        return KEY::KP_7;
    case GLFW_KEY_KP_8:
        return KEY::KP_8;
    case GLFW_KEY_KP_9:
        return KEY::KP_9;
    case GLFW_KEY_KP_DECIMAL:
        return KEY::KP_DECIMAL;
    case GLFW_KEY_KP_DIVIDE:
        return KEY::KP_DIVIDE;
    case GLFW_KEY_KP_MULTIPLY:
        return KEY::KP_MULTIPLY;
    case GLFW_KEY_KP_SUBTRACT:
        return KEY::KP_SUBTRACT;
    case GLFW_KEY_KP_ADD:
        return KEY::KP_ADD;
    case GLFW_KEY_KP_ENTER:
        return KEY::KP_ENTER;
    case GLFW_KEY_KP_EQUAL:
        return KEY::KP_EQUAL;
    case GLFW_KEY_LEFT_SHIFT:
        return KEY::LEFT_SHIFT;
    case GLFW_KEY_LEFT_CONTROL:
        return KEY::LEFT_CONTROL;
    case GLFW_KEY_LEFT_ALT:
        return KEY::LEFT_ALT;
    case GLFW_KEY_LEFT_SUPER:
        return KEY::LEFT_SUPER;
    case GLFW_KEY_RIGHT_SHIFT:
        return KEY::RIGHT_SHIFT;
    case GLFW_KEY_RIGHT_CONTROL:
        return KEY::RIGHT_CONTROL;
    case GLFW_KEY_RIGHT_ALT:
        return KEY::RIGHT_ALT;
    case GLFW_KEY_RIGHT_SUPER:
        return KEY::RIGHT_SUPER;
    case GLFW_KEY_MENU:
        return KEY::MENU;
    }
    return KEY::INVALID;
}

} // namespace signal
